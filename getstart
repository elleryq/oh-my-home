#!/bin/sh

# Detects which OS and if it is Linux then it will detect which Linux Distribution.
if [ -e /etc/os-release ]; then
    . /etc/os-release
else
    echo "Unknown Distribution."
    exit -1
fi

install_gcin_in_debian_based() {
    # add gcin
    echo "deb http://www.csie.nctu.edu.tw/~cp76/gcin/download/debian eliu release" > /tmp/gcin.list
    sudo mv /tmp/gcin.list /etc/apt/sources.list.d/
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 835AB0E3
}

install_git_in_debian_based() {
    status=$(dpkg-query -W -f='${Status}\n' git)
    if [ "$status" == "install ok installed" ]; then
        echo "git is installed."
    else
        sudo apt-get install -y git
    fi
}

install_gcin() {
    echo "install gcin"
    case $ID in
        ubuntu|debian)
            install_gcin_in_debian_based
            ;;
        arch)
            echo "Not implemented."
            ;;
    esac
}

install_git_in_arch() {
    sudo pacman -Syu git
}

install_git() {
    echo "install git"
    case $ID in
        ubuntu|debian|raspbian)
            install_git_in_debian_based
            ;;
        arch)
            install_git_in_arch
            ;;
    esac
}

install_pyenv() {
    if [ -d $HOME/.pyenv ]; then
        cd $HOME/.pyenv
        git pull --rebase
        cd $HOME
    else
        git clone https://github.com/yyuu/pyenv.git $HOME/.pyenv
    fi
}

install_exvim() {
    EXVIM="$HOME/exvim"
    if [ -d $EXVIM ]; then
        rm -rf $EXVIM
    fi
    for slink in $HOME/.vim $HOME/.vimrc $HOME/.vimrc.local $HOME/.vimrc.plugins $HOME/.vimrc.plugins.local ; do
        [ -e $slink ] && rm -f $slink
    done

    git clone https://github.com/elleryq/exvim.git $HOME/exvim

    for slink in .vimrc .vimrc.local .vimrc.plugins .vimrc.plugins.local ; do
        ln -s $EXVIM/$slink $HOME/$slink
    done
    ln -s $EXVIM/vimfiles $HOME/.vim

    cd $EXVIM
    sh unix/install.sh
    cd $HOME
}

# Main
main() {
    cd $HOME

    GIT=$(which git)
    if [ -z "$GIT" ]; then
        install_git
    fi

    OH_MY_HOME=$HOME/.oh-my-home
    if [ -d $OH_MY_HOME ]; then
        cd $OH_MY_HOME
        git pull --rebase
        cd $HOME
    else
        git clone https://github.com/elleryq/oh-my-home.git $OH_MY_HOME
    fi

    if [ -d $OH_MY_HOME ]; then
        # According distro to include scripts.
        if [ -e "$OH_MY_HOME/distro/$ID_LIKE" ]; then
            . $OH_MY_HOME/distro/$ID_LIKE
        fi
        # partial
        if [ -e "$OH_MY_HOME/distro/$ID" ]; then
            . $OH_MY_HOME/distro/$ID
        fi

        ZSH=$(which zsh)
        if [ -z "$ZSH" ]; then
            echo "install zsh"
            install_zsh
        fi

        rm -f $HOME/.zshenv
        ln -s $OH_MY_HOME/zshenv $HOME/.zshenv
        rm -f $HOME/.zshrc
        ln -s $OH_MY_HOME/zshrc $HOME/.zshrc

        if [ -d $HOME/.oh-my-zsh ]; then
            cd $HOME/.oh-my-zsh
            git pull --rebase
            cd $HOME
        else
            git clone https://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
        fi

        rm -f $HOME/.tmux.conf
        ln -s $OH_MY_HOME/tmux.conf $HOME/.tmux.conf

        install_pyenv
        install_packages
        install_exvim

        echo "done.  You need to re-open terminal to activate."
    else
        echo "Cannot 'get oh-my-home', install failed."
        exit -1
    fi
}

main

exit 0
